/*
// выполненное задание к [Хекслет] Фронтенд JavaScript (2021)
// 02_Введение в программирование
// 8. О, нет, ошибки! И как с ними справляться

Обычно вам нужно избегать ошибок, но в этом упражнении вы будете порождать ошибки. Это поможет вам понять, какие типы
ошибок возникают в разных ситуациях, и привыкнуть распознавать их в будущем. Вы будете работать в двух файлах —
reference.js и type.js. Ваша задача — породить две ошибки внутри специально созданных функций.

reference.js
Сделайте так, чтобы код внутри функции reference() порождал ошибку типа ReferenceError.
Вспомните, что ReferenceError возникает, когда используется несуществующий идентификатор (имя). Например, если ваша
функция возвращает значение константы, но такой константы не существует. Или в каком-нибудь выражении (фрагмент кода,
который вычисляется в значение, как формула) используется неизвестный идентификатор.

type.js
Сделайте так, чтобы код внутри функции type() порождал ошибку типа TypeError.
Вспомните, что TypeError возникает, когда вы используете неправильный тип. Например, если вы пытаетесь вызвать
численную константу как функцию.

ВАЖНО! Ошибки должны генерироваться внутри функций reference() и type().
*/

// @ts-check
const type = (a,b) => {
    // BEGIN (write your solution here)
    return a() + b;
    // END
};
export default type;

// Решение учителя
// @ts-check
const type = () => {
    // BEGIN
    const value = 3;
    value();
    // END
};
export default type;


// @ts-check
const reference = () => {
    // BEGIN (write your solution here)
    return name;
    // END
};
export default reference;


// Решение учителя
// @ts-check
const reference = () => {
    // BEGIN
    return nothing;
    // END
};
export default reference;
